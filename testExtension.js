(() => {
  let e=this;

  // べんりなどうぐばこ
  
  const U=(()=>{
    const 円しゅうりつ=3.1415926535897932384626;
    const どをラジアンに=円しゅうりつ/180;
    
    const せいすうリスト=(こすう)=>{
      let リスト=[];
      for(let せいすう=0;せいすう<こすう;++せいすう){
	リスト.push(せいすう);
      }
      return リスト;
    };

    const ベクターじげん=(ベクター)=>{return ベクター.length;};
    
    const ちょっこうベクター=(ベクター)=>{
      return [-ベクター[1],ベクター[0]];
    };

    const ぎゃくむきベクター=(ベクター)=>{
      return せいすうリスト(ベクターじげん(ベクター))
	.map((せいぶんラベル)=>{
	  return -ベクター[せいぶんラベル];
	});
    };
    const スカラーばい=(スカラー,ベクター)=>{
      return ベクター.map((せいぶん)=>{return スカラー*せいぶん;});
    };
    
    const ベクターたしざん=(ベクター1,ベクター2)=>{
      return せいすうリスト(ベクターじげん(ベクター1))
	.map((せいぶんラベル)=>{
	  return ベクター1[せいぶんラベル]+ベクター2[せいぶんラベル];
	});
    };

    const ベクターひきざん=(ベクター1,ベクター2)=>{
      return ベクターたしざん(ベクター1,ぎゃくむきベクター(ベクター2));
    };
    
    const ベクターかいてん=(かくど,ベクター)=>{
      return ベクターたしざん(
	スカラーばい(Math.cos(かくど*どをラジアンに),ベクター),
	スカラーばい(Math.sin(かくど*どをラジアンに),
		     ちょっこうベクター(ベクター)));
    };

    const へいこうとうえいき=(見るけいど,見るいど)=>{
      return (ベクター3D)=>{
	const ベクター2D1=[ベクター3D[0],ベクター3D[1]];
	const ベクター2D2=ベクターかいてん(-見るけいど,ベクター2D1);
	const ベクター3D2=[ベクター2D2[0],ベクター2D2[1],ベクター3D[2]];
	const ベクター2D3=[ベクター3D2[1],ベクター3D2[2]];
	const ベクター2D4=v.rotate(-見るいど,ベクター2D3);
	return [ベクター3D2[0],ベクター2D4[0],ベクター2D4[1]];
      };
    };

    return {
      せいすうリスト: せいすうリスト,
      ちょっこうベクター:ちょっこうベクター,
      スカラーばい:スカラーばい,
      ベクターたしざん:ベクターたしざん,
      ベクターひきざん:ベクターひきざん,
      ベクターかいてん:ベクターかいてん,
      へいこうとうえいき:へいこうとうえいき
    };
  })();


  // へいめんのかめ
 
  const へいめんのかめ=()=>{
    const ばしょとかめをつくる=
	  (xざひょう,yざひょう,むき)=>{
	    return {ばしょ: 0, かめ: {いち:[xざひょう,yざひょう],むき:むき}};
	  };
    
    const かめのx=(かめ)=>{return かめ.かめ.いち[0];};

    const かめのy=(かめ)=>{return かめ.かめ.いち[1];};
    
    const かめのむき=(かめ)=>{return かめ.かめ.むき;};
    
    const すすむ=(きょり,かめ)=>{
      const むき=かめのむき(かめ);
      const あたらしいx=かめのx(かめ)+きょり*Math.cos(むき*U.どをラジアンに);
      const あたらしいy=かめのy(かめ)+きょり*Math.sin(むき*U.どをラジアンに);
      return ばしょとかめをつくる(あたらしいx,あたらしいy,むき);
    };

    const 左にまわす=(かくど,かめ)=>{
      return ばしょとかめをつくる(
	かめのx(かめ),かめのy(かめ),かめのむき(かめ)+かくど);
    };

    return {
      ばしょとかめをつくる:ばしょとかめをつくる,
      かめのx:かめのx,
      かめのy:かめのy,
      すすむ:すすむ,
      左にまわす:左にまわす
    };
  };

  //りっぽうたいのかめ

  const りっぽうたいのかめ=()=>{
    const しょきちょうてん=(へんのながさ)=>{
      return [
	{ばんごう: 0,ざひょう3D:[0,0,0]},
	{ばんごう: 1,ざひょう3D:[0,0,へんのながさ]},
	{ばんごう: 2,ざひょう3D:[へんのながさ,0,へんのながさ]},
	{ばんごう: 3,ざひょう3D:[へんのながさ,0,0]},
	{ばんごう: 4,ざひょう3D:[0,へんのながさ,0]},
	{ばんごう: 5,ざひょう3D:[0,へんのながさ,へんのながさ]},
	{ばんごう: 6,ざひょう3D:[へんのながさ,へんのながさ,へんのながさ]},
	{ばんごう: 7,ざひょう3D:[へんのながさ,へんのながさ,0]}
      ];
    };

    return {
      しょきちょうてん:しょきちょうてん
    };
  };
  

  // かくちょうブロックづくり
  
  // Cleanup function when the extension is unloaded
  e._shutdown = ()=>{};

  // Status reporting code
  // Use this to report missing hardware, plugin or unsupported browser
  e._getStatus = ()=>{
    return {status: 2, msg: 'Ready'};
  };

  /*e.ランダムにまつ = (コールバック) => {
    let まつじかん = Math.random();
    //console.log('Waiting for ' + wait + ' seconds');
    window.setTimeout(()=>{
      コールバック();
    }, まつじかん*1000);
  };*/

  const モジュール=へいめんのかめ();

  e.ばしょとかめをつくる=モジュール.ばしょとかめをつくる;
  e.かめのx=モジュール.かめのx;
  e.かめのy=モジュール.かめのy;
  e.すすむ=モジュール.すすむ;
  e.左にまわす=モジュール.左にまわす;
  
  // Block and block menu descriptions
  let descriptor = {
    blocks: [
      // Block type, block name, function name
      ['r', 'かめ x:%n , y:%n, むき:%n', 'ばしょとかめをつくる', 0,0,90],
      ['r', '%s のxざひょう', 'かめのx', 'かめ'],
      ['r', '%s のyざひょう', 'かめのy', 'かめ'],
      ['r', '%n ぽ %s をすすめたかめ', 'すすむ', 'きょり','かめ'],
      ['r', '%n ど %s を左にまわしたかめ', '左にまわす', 'かくど','かめ'],
      //['w', 'ランダムにまつ', 'ランダムにまつ'],
    ]
  };
  
  // Register the extension
  ScratchExtensions.register('My first extension', descriptor, e);
})();
